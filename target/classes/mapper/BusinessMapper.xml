<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tju.elmboot.mapper.BusinessMapper">

    <resultMap id="listBusinessByDistanceMap" type="com.tju.elmboot.po.Business">
        <id column="businessId" property="businessId"/>
        <result column="businessName" property="businessName"/>
        <result column="businessAddress" property="businessAddress"/>
        <result column="businessExplain" property="businessExplain"/>
        <result column="businessImg" property="businessImg"/>
        <result column="orderTypeId" property="orderTypeId"/>
        <result column="starPrice" property="starPrice"/>
        <result column="deliveryPrice" property="deliveryPrice"/>
        <result column="remarks" property="remarks"/>
        <result column="longitude" property="longitude"/>
        <result column="latitude" property="latitude"/>
        <result column="score" property="score"/>
        <result column="distance" property="distance"/>
    </resultMap>

    <resultMap id="listBusinessByConditionsMap" type="com.tju.elmboot.po.Business">
        <id column="businessId" property="businessId"/>
        <result column="businessName" property="businessName"/>
        <result column="businessAddress" property="businessAddress"/>
        <result column="businessExplain" property="businessExplain"/>
        <result column="businessImg" property="businessImg"/>
        <result column="orderTypeId" property="orderTypeId"/>
        <result column="starPrice" property="starPrice"/>
        <result column="deliveryPrice" property="deliveryPrice"/>
        <result column="remarks" property="remarks"/>
        <result column="longitude" property="longitude"/>
        <result column="latitude" property="latitude"/>
        <result column="score" property="score"/>
        <result column="distance" property="distance"/>
    </resultMap>

    <update id="refreshDistance" parameterType="java.util.Map">
            update business set distance =  ROUND(lat_lng_distance(#{latitude}, #{longitude}, latitude, longitude), 2)
                            where 1=1;
    </update>

    <select id="listBusinessByDistance" parameterType="java.util.Map" resultMap="listBusinessByDistanceMap">
        select b.businessId as BusinessId,
               b.businessName as BusinessName,
               b.longitude as longitude,
               b.latitude as latitude,
               b.businessAddress as businessAddress,
               b.businessExplain as businessExplain,
               b.businessImg as businessImg,
               b.orderTypeId as orderTypeId,
               b.starPrice as starPrice,
               b.deliveryPrice as deliveryPrice,
               b.remarks as remarks,
               b.score as score,
               b.distance as distance
               <if test="longitude != null and longitude != ''">,
                ROUND(lat_lng_distance(#{latitude}, #{longitude}, latitude, longitude), 2) as distance
               </if>
        from business b where 1=1
               <if test="longitude != null and longitude != ''">
                    and b.latitude &gt; #{minLat} and b.latitude &lt; #{maxLat}
                    and b.longitude &gt; #{minLng} and b.longitude &lt; #{maxLng}
                    order by distance asc
               </if>
    </select>

    <select id="listBusinessByConditions" parameterType="com.tju.elmboot.po.Business" resultMap="listBusinessByConditionsMap">
        select b.businessId as BusinessId,
               b.businessName as BusinessName,
               b.longitude as longitude,
               b.latitude as latitude,
               b.businessAddress as businessAddress,
               b.businessExplain as businessExplain,
               b.businessImg as businessImg,
               b.orderTypeId as orderTypeId,
               b.starPrice as starPrice,
               b.deliveryPrice as deliveryPrice,
               b.remarks as remarks,
               b.score as score,
               b.distance as distance
        from business b where 1=1
            <if test="orderTypeId != null">
                and orderTypeId=#{orderTypeId}
            </if>
            <if test="starPrice != null">
                and starPrice <![CDATA[<=]]> #{starPrice}
            </if>
            <if test="deliveryPrice != null">
                and deliveryPrice <![CDATA[<=]]> #{deliveryPrice}
            </if>
    </select>
</mapper>